{"version":3,"sources":["utils/useDebounce.jsx","storeContext.js","services/movieDB.js","actions.js","components/NothingFound.jsx","components/Spinner.jsx","components/SearchResultsList.jsx","components/SearchQueryHistory.jsx","components/SearchDropdown.jsx","components/SearchPanel.jsx","components/Movie.jsx","components/People.jsx","components/MovieInfo.jsx","components/MoviesList.jsx","components/Home.jsx","reducer.js","components/App.jsx","index.js"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","storeContext","createContext","movieDB","url","this","query","a","page","fetch","data","json","movies","results","id","movieUrl","castUrl","movie","cast","composeMovie","genres","original_title","budget","production_companies","release_date","runtime","overview","poster_path","crew","sortedCrewByPopularity","sort","b","popularity","reverse","slice","sortedPeople","people","left","right","forEach","p","profile","push","directing","find","job","toLowerCase","known_for_department","title","date","name","poster","production","length","map","character","profile_path","gender","parseCast","jobs","crewList","idx","person","parseCrew","setQueryHistory","localStorage","queryHistory","JSON","stringify","history","parse","findIndex","q","concat","type","payload","NothingFound","className","Spinner","SearchResultsList","dispatch","moviesList","setMoviesList","renderMoviesList","item","data-id","data-title","to","src","alt","onClick","e","target","closest","dataset","SearchQueryHistory","useContext","state","queryList","setQueryList","renderQueryList","link","SearchDropdown","loading","inputValue","searchResults","SearchPanel","movieService","setInputValue","dropdownVisible","setDropdownVisible","setLoading","inputRef","useRef","searchRequest","useHistory","hideDropdownHandler","current","contains","getMovies","fetchData","action","onSubmit","preventDefault","blur","ref","onChange","onFocus","document","addEventListener","onBlur","removeEventListener","Movie","_runtime","Math","floor","data-directing-id","g","People","listType","setListType","peoplelist","setPeopleList","list","renderPeopleList","peopleList","role","j","classList","Container","MovieInfo","useParams","getMovie","Object","keys","MoviesList","URLSearchParams","useLocation","search","get","useMemo","Home","initialState","reducer","App","useReducer","Provider","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f06d439.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst useDebounce = (value, delay = 250) => {\r\n\r\n    const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n    useEffect(() => {\r\n\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value)\r\n        }, delay)\r\n\r\n        return () => clearTimeout(handler)\r\n    })\r\n\r\n    return debouncedValue\r\n\r\n}\r\n\r\nexport default useDebounce","import { createContext } from 'react'\r\n\r\nconst storeContext = createContext()\r\n\r\nexport default storeContext","class movieDB {\r\n\r\n    #apiKey = '6f14bb0ba1b5ca6a0116cfaafb3edd27'\r\n    #moviesUrl = `https://api.themoviedb.org/3/search/movie`\r\n    #movieUrl = `https://api.themoviedb.org/3/movie/`\r\n    \r\n    constructUrl(url) {\r\n        return `${url}?api_key=${this.#apiKey}&language=en-US&`\r\n    }\r\n\r\n    async getMovies(query, page = 1) {\r\n        const url = `${this.#moviesUrl}?api_key=${this.#apiKey}&query=${query}&page=${page}&language=en-US&`\r\n\r\n        let data = await fetch(url)\r\n        data = await data.json()\r\n\r\n        return {\r\n            page: data.page,\r\n            movies: data.results,\r\n        }\r\n    }\r\n\r\n    async getMovie(id) {\r\n        const movieUrl = `${this.#movieUrl}${id}?api_key=${this.#apiKey}&language=en-US&`\r\n        const castUrl = `${this.#movieUrl}${id}/credits?api_key=${this.#apiKey}&language=en-US&`\r\n\r\n        let movie = await fetch(movieUrl)\r\n        movie = await movie.json()\r\n\r\n        let cast = await fetch(castUrl)\r\n        cast = await cast.json()\r\n\r\n        return this.composeMovie(movie, cast)\r\n    }\r\n\r\n    composeMovie({ id, genres, original_title, budget, production_companies, release_date, runtime, overview, poster_path}, {cast, crew}) {\r\n\r\n        const sortedCrewByPopularity = crew.sort((a, b) => {\r\n            return a.popularity - b.popularity\r\n        }).reverse().slice(0, 20)\r\n\r\n        \r\n        const sortedPeople = (people) => {\r\n            let left = []\r\n            let right = []\r\n\r\n            people.forEach(p => {\r\n                if(p.profile) {\r\n                    left.push(p)\r\n                } else {\r\n                    right.push(p)\r\n                }\r\n            })\r\n\r\n            return [...left, ...right]\r\n        }\r\n\r\n\r\n        let directing = sortedCrewByPopularity.find(p => p.job.toLowerCase() === 'director') \r\n        if(!directing) directing = sortedCrewByPopularity.find(p => p.known_for_department.toLowerCase() === 'directing') \r\n\r\n        const parseCrew = (crew) => {\r\n            let jobs = []\r\n            let crewList = []\r\n\r\n            crew.forEach((p, idx) => {\r\n\r\n                if(!crew[idx + 1]) return null;\r\n\r\n                if(p.name === crew[idx + 1].name) {\r\n                    jobs.push(p.job)\r\n                    return null;\r\n                } else if(p.name !== crew[idx + 1].name) {\r\n                    jobs.push(p.job)\r\n\r\n                    const person = {\r\n                        id: p.id,\r\n                        name: p.name,\r\n                        jobs: [...jobs],\r\n                        profile: p.profile_path\r\n                    }\r\n\r\n                    jobs = []\r\n                    crewList.push(person)\r\n                }\r\n            })\r\n            return crewList\r\n        }\r\n\r\n        const parseCast = (cast) => {\r\n\r\n            return cast.slice(0, 15).map(p => {\r\n                return {\r\n                    id: p.id,\r\n                    name: p.name,\r\n                    character: p.character,\r\n                    profile: p.profile_path,\r\n                    gender: p.gender === 1 ? 'female' : 'male',\r\n                }\r\n            })\r\n        }\r\n\r\n        return {\r\n            id,\r\n            genres,\r\n            title: original_title,\r\n            runtime,\r\n            date: release_date,\r\n            budget,\r\n            overview,\r\n            directing: {\r\n                id: !!directing && directing.id,\r\n                name: !!directing && directing.name,\r\n            },\r\n            poster: poster_path,\r\n            production: production_companies.length ? production_companies[0].name : null,\r\n            people: {\r\n                cast: cast.length ? sortedPeople(parseCast(cast)) : null,\r\n                crew: crew.length ? sortedPeople(parseCrew(sortedCrewByPopularity)) : null,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default movieDB","const setQueryHistory = (title, id = '') => {\r\n    if(!localStorage.queryHistory) localStorage.queryHistory = JSON.stringify([])\r\n\r\n    let history = JSON.parse(localStorage.queryHistory).slice(0, 7)\r\n\r\n    if(!title) {\r\n        return {type: 'SET_QUERY_HISTORY', payload: history}\r\n    } else {\r\n\r\n        const idx = history.findIndex(q => q.title === title)\r\n        if(idx !== -1) {\r\n            history = [\r\n                history[idx],\r\n                ...history.slice(0, idx),\r\n                ...history.slice(idx + 1)\r\n            ]\r\n        } else {\r\n            history = [{title, id}].concat(history)\r\n        }\r\n        \r\n        localStorage.queryHistory = JSON.stringify(history)\r\n\r\n        return {type: 'SET_QUERY_HISTORY', payload: history}\r\n    }\r\n}\r\n\r\nexport { setQueryHistory }","const NothingFound = () => {\r\n    return (\r\n        <div className=\"nothing-found\">\r\n            <h2>Nothing found</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NothingFound","const Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"loadingio-spinner-spinner-7fyeb8xf3j\">\r\n                <div className=\"ldio-qwie34wu23\">\r\n                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import { useEffect, useState } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { setQueryHistory } from '../actions'\r\n\r\nconst SearchResultsList = ({ movies, dispatch }) => {\r\n\r\n    const [moviesList, setMoviesList] = useState()\r\n\r\n    useEffect(() => {\r\n        setMoviesList(renderMoviesList(movies))\r\n    }, [movies])\r\n\r\n    const onResultsClick = (e) => {\r\n        const id = e.target.closest('.results-item').dataset.id\r\n        const title = e.target.closest('.results-item').dataset.title\r\n        dispatch(setQueryHistory(title, id))\r\n    }\r\n\r\n    const renderMoviesList = (data) => {\r\n\r\n        return data.slice(0, 7).map((item, idx) => {\r\n            return (\r\n                <li \r\n                    className=\"results-item\" \r\n                    key={idx} \r\n                    data-id={item.id}\r\n                    data-title={item.title}>\r\n                    <Link \r\n                        to={`/movie/${item.id}`} \r\n                        className=\"results-item-link\"\r\n                        >\r\n                        <div className=\"img-wrap\">\r\n                            { item.poster_path ? <img src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`} alt=\"\"/> : null }\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <p>{item.title}</p>\r\n                            <span>{item.release_date}</span>\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ul \r\n            className='search-results-list' \r\n            onClick={onResultsClick}\r\n        >\r\n            { \r\n                moviesList\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SearchResultsList","import { useEffect, useContext, useState } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport storeContext from '../storeContext'\r\nimport { setQueryHistory } from '../actions'\r\n\r\nconst SearchQueryHistory = ({ dispatch }) => {\r\n    const { state: { queryHistory } } = useContext(storeContext)\r\n\r\n    const [queryList, setQueryList] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setQueryList(renderQueryList(queryHistory))\r\n    }, [queryHistory])\r\n\r\n    const onHistoryClick = (e) => {\r\n        const id = e.target.closest('.history-item').dataset.id\r\n        const title = e.target.closest('.history-item').dataset.title\r\n        dispatch(setQueryHistory(title, id))\r\n    }\r\n\r\n    const renderQueryList = (queryHistory) => {\r\n        return queryHistory.map(q => {\r\n\r\n            const link = q.id ? `/movie/${q.id}` : `/movies?query=${q.title}`\r\n\r\n            return (\r\n                <li \r\n                    className=\"history-item\" \r\n                    key={`${q.id}${q.title}`}\r\n                    data-id={q.id}\r\n                    data-title={q.title}>\r\n                    <Link to={link}>\r\n                        <i className=\"fas fa-history\"></i>\r\n                        <p>{ q.title }</p>\r\n                    </Link>\r\n                    \r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ul className=\"search-query-history\"\r\n            onClick={onHistoryClick}>\r\n            {\r\n                queryList\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SearchQueryHistory","import { useContext } from 'react'\r\nimport storeContext from '../storeContext'\r\nimport NothingFound from './NothingFound'\r\nimport Spinner from './Spinner'\r\n\r\nimport SearchResultsList from './SearchResultsList'\r\nimport SearchQueryHistory from './SearchQueryHistory'\r\n\r\nconst SearchDropdown = ({ loading, inputValue }) => {\r\n\r\n    const { state: { searchResults }, dispatch } = useContext(storeContext) \r\n\r\n    return (\r\n        <div className='search-dropdown' >\r\n            { \r\n                !inputValue ? <SearchQueryHistory dispatch={dispatch}/> \r\n                    : loading ? <Spinner /> \r\n                        : searchResults.length ? <SearchResultsList movies={searchResults} dispatch={dispatch}/>\r\n                            : <NothingFound /> \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchDropdown","import { useState, useEffect, useContext, useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport useDebounce from '../utils/useDebounce'\r\n\r\nimport storeContext from '../storeContext'\r\nimport movieDB from '../services/movieDB'\r\nimport { setQueryHistory } from '../actions'\r\n\r\nimport SearchDropdown from './SearchDropdown'\r\n\r\nconst SearchPanel = () => {\r\n    const movieService = new movieDB()  \r\n\r\n    const { dispatch } = useContext(storeContext)\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [dropdownVisible, setDropdownVisible] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    const searchRequest = useDebounce(inputValue)\r\n    const history = useHistory()\r\n\r\n    const hideDropdownHandler = (e) => {\r\n        if(inputRef.current && !inputRef.current.contains(e.target)) setDropdownVisible(false)\r\n    }\r\n\r\n    const inputFocusHandler = () => {\r\n        setDropdownVisible(true)\r\n        document.addEventListener('click', hideDropdownHandler)\r\n    }\r\n\r\n    const inputBlurHandler = () => {\r\n        document.removeEventListener('click', hideDropdownHandler)\r\n    }\r\n\r\n    const onSearchSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(inputValue) {\r\n            dispatch({type: 'SET_SEARCH_RESULTS', payload: { movies:[] }})\r\n            history.push(`/movies?query=${inputValue}`)\r\n            dispatch(setQueryHistory(inputValue))\r\n            setInputValue('')\r\n            inputRef.current.blur()\r\n        }\r\n    }   \r\n\r\n    const onSearchInput = (e) => {\r\n        setInputValue(e.target.value)\r\n        setLoading(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if(searchRequest) {\r\n                setLoading(true)\r\n                const movies = await movieService.getMovies(searchRequest)\r\n                dispatch({type: 'SET_SEARCH_RESULTS', payload: movies})\r\n                setLoading(false)\r\n            } else {\r\n                dispatch({type: 'SET_SEARCH_RESULTS', payload: { movies: [] }})\r\n            }\r\n        }\r\n\r\n        fetchData()\r\n    }, [searchRequest])\r\n\r\n    return (\r\n        <div className={ dropdownVisible ? 'search-panel show-results' : 'search-panel'}>\r\n            <form \r\n                action=\"\" \r\n                className=\"search-panel-field\" \r\n                onSubmit={onSearchSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"search-panel-input\" \r\n                    ref={inputRef}\r\n                    value={inputValue} \r\n                    onChange={onSearchInput} \r\n                    onFocus={inputFocusHandler}\r\n                    onBlur={inputBlurHandler}\r\n                    />\r\n                <button className=\"btn\" type=\"submit\">search</button>\r\n            </form>\r\n   \r\n            { \r\n                dropdownVisible \r\n                    && <SearchDropdown \r\n                            loading={loading} \r\n                            inputValue={inputValue} /> \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPanel","import { Link } from 'react-router-dom'\r\n\r\nconst Movie = ({id, genres, title, runtime, budget, overview, poster, production, date, directing}) => {\r\n\r\n    const _runtime = `${Math.floor(runtime / 60)}h ${runtime - (Math.floor(runtime / 60) * 60 )}m` \r\n\r\n    return (\r\n        <div className=\"movie\" id={id}>\r\n            <div className=\"movie-poster-wrap\">\r\n                { poster ? <img src={`https://image.tmdb.org/t/p/w500/${poster}`} alt=\"\"/> : null }\r\n            </div>\r\n            <div className=\"movie-describe\">\r\n                <h2 className=\"title\">{ title }</h2>\r\n                <div className=\"under-title\">\r\n                    <span className=\"studio\">{ production }</span>\r\n                    <span className=\"date\">Release: { date || 'unknown' }</span>\r\n                </div>\r\n                \r\n                <p className=\"overview\">{ overview }</p>\r\n\r\n                <div className=\"movie-ditails\">\r\n                    <h4 data-directing-id={directing.id}><span>directing:</span> { directing.name || 'unknown' }</h4>\r\n                    <h4><span>runtime:</span> { _runtime }</h4>\r\n                    <h4><span>budgete:</span> { budget } $</h4>\r\n                    <ul className=\"genres\">\r\n                        {\r\n                            genres.map((g, idx) => {\r\n                                const name = genres[idx + 1] ? `${g.name},` : g.name \r\n\r\n                                return <Link to=\"#\" key={idx}>{ name }</Link>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n\r\n","import { useState, useEffect } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst People = ({ people }) => {\r\n\r\n    const [listType, setListType] = useState('cast')\r\n    const [peoplelist, setPeopleList] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const list = renderPeopleList(people[listType])\r\n        setPeopleList(list)\r\n    }, [listType])\r\n\r\n    const renderPeopleList = (peopleList) => {\r\n\r\n        return peopleList && peopleList.map(p => {\r\n            let role = null\r\n\r\n            if(listType === 'cast' ) {\r\n                role = <span className=\"character\">{p.character}</span> \r\n            } else {\r\n                role = <ul className=\"job-list\"> { p.jobs.map(j => <li key={j} className=\"job\">{j}</li>) }</ul> \r\n            }\r\n\r\n            return (<li \r\n                className=\"cast-item\" \r\n                key={ p.id }>\r\n                <div className=\"img-wrap\">\r\n                    { p.profile ? <img src={`https://image.tmdb.org/t/p/w500/${p.profile}`} alt=\"\" /> : null}  \r\n                </div>\r\n                <div className=\"person-info\">\r\n                    <Link to=\"#\">\r\n                        <h3 className=\"name\">{ p.name }</h3>\r\n                    </Link>\r\n                    { role }\r\n                </div>\r\n                \r\n            </li>)\r\n        })\r\n    }\r\n\r\n    const onSwitchClick = (e) => {\r\n        if(e.target.classList.contains('cast')) setListType('cast')\r\n        if(e.target.classList.contains('crew')) setListType('crew')\r\n    }\r\n\r\n    return (\r\n        <div className=\"movie-people\">\r\n            <div className=\"movie-people-header\">\r\n                <h2 className=\"movie-people-title\">{listType}</h2>\r\n                <div className={`switch switch-${listType}`} onClick={onSwitchClick}>\r\n                    <span className=\"cast\">cast</span>\r\n                    <span className=\"crew\">crew</span>\r\n                </div>\r\n            </div>\r\n                     \r\n            <ul className=\"cast-list\">\r\n                { peoplelist }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default People","import { useEffect, useContext, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport storeContext from '../storeContext'\r\n\r\nimport Movie from './Movie'\r\nimport People from './People'\r\nimport Spinner from './Spinner'\r\n\r\nimport movieDB from '../services/movieDB'\r\n\r\nconst Container = ({ movie }) => {\r\n    return (\r\n        <>\r\n            <Movie {...movie}/> \r\n            <People people={movie.people} /> \r\n        </>\r\n    )\r\n}\r\n\r\nconst MovieInfo = () => {\r\n    const movieService = new movieDB()\r\n    const { id } = useParams()\r\n    const { state: { movie }, dispatch } = useContext(storeContext)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect( () => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n\r\n            const movie = await movieService.getMovie(id)\r\n            dispatch({type: 'SET_MOVIE', payload: movie})\r\n    \r\n            setLoading(false)\r\n        }\r\n\r\n        fetchData()\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"movie-info\">\r\n            { loading ? <Spinner /> \r\n                : Object.keys(movie).length \r\n                    ? <Container movie={movie}/> : null } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo","import { useState, useEffect, useContext, useMemo } from 'react'\r\nimport { useLocation, Link } from 'react-router-dom'\r\n\r\nimport storeContext from '../storeContext'\r\nimport movieDB from '../services/movieDB'\r\nimport Spinner from './Spinner'\r\nimport NothingFound from './NothingFound'\r\n\r\nconst MoviesList = () => {\r\n    const movieService = new movieDB() \r\n    const { state: { moviesList }, dispatch } = useContext(storeContext)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const useQuery = () => new URLSearchParams(useLocation().search)\r\n    const query = useQuery().get('query')\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            const movies = await movieService.getMovies(query)\r\n            dispatch({type: 'SET_MOVIES_LIST', payload: movies})\r\n            setLoading(false)\r\n        }\r\n\r\n        fetchData()\r\n    }, [query])\r\n\r\n    const renderMoviesList = (movies) => {\r\n        \r\n        return movies.map((movie, idx) => {\r\n            return (\r\n                <li className=\"movies-list-item\" key={idx}>\r\n                    <div className=\"img-wrapper\">\r\n                        { movie.poster_path ? <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt=\"\"/> : null }\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div>\r\n                            <h3 className=\"title\">{movie.title}</h3>\r\n                            <span className=\"date\">{movie.release_date}</span>\r\n                            <p className=\"about\">{movie.overview}</p>  \r\n                        </div>\r\n\r\n                        <Link to={`/movie/${movie.id}`} className=\"btn-more\">more</Link>\r\n                    </div>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    const movies = useMemo(() => renderMoviesList(moviesList), [moviesList])\r\n\r\n    return (\r\n        <ul className=\"movies-list\">\r\n            { loading ? <Spinner /> \r\n                : movies.length ? movies \r\n                : <NothingFound /> }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default MoviesList","const Home = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <i className=\"far fa-chevron-up\"></i>\r\n            <div className=\"home__text\">\r\n                Type to search movie\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","const initialState = {\r\n    searchResults: [],\r\n    moviesList: [],\r\n    queryHistory: [],\r\n    loading: true,\r\n    movie: {},\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'SET_SEARCH_RESULTS':\r\n            return {\r\n                ...state,\r\n                searchResults: action.payload.movies,\r\n            }\r\n        case 'SET_MOVIES_LIST':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                page: action.payload.page,\r\n                moviesList: action.payload.movies.slice(0, 10),\r\n            }\r\n        case 'SET_MOVIE': \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movie: action.payload,\r\n            }\r\n        case 'SET_QUERY_HISTORY': \r\n            return {\r\n                ...state,\r\n                queryHistory: action.payload\r\n            }\r\n        case 'SET_LOADING': \r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport {\r\n    reducer,\r\n    initialState\r\n}","import { useReducer, useEffect } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch\r\n} from 'react-router-dom'\r\n\r\nimport SearchPanel from './SearchPanel'\r\nimport MovieInfo from './MovieInfo'\r\nimport MoviesList from './MoviesList'\r\nimport Home from './Home'\r\n\r\nimport { reducer, initialState } from '../reducer'\r\nimport storeContext from '../storeContext'\r\nimport { setQueryHistory } from '../actions'\r\n\r\nimport '../styles/common.scss'\r\n\r\nconst App = () => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    useEffect(() => {\r\n        dispatch(setQueryHistory())\r\n    }, [])\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"wrapper\">\r\n                <storeContext.Provider value={{ state, dispatch }}>\r\n                    <SearchPanel />\r\n                    <Switch>\r\n                        <Route \r\n                            path=\"/movie/:id\" \r\n                            component={MovieInfo}/>\r\n\r\n                        <Route \r\n                            path=\"/movies\" \r\n                            component={MoviesList}/>\r\n                            \r\n                        <Route \r\n                            path=\"/\" \r\n                            component={Home}/>\r\n                            \r\n                    </Switch>\r\n                </storeContext.Provider>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}